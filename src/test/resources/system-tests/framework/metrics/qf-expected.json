{
  "attemptCount": 1,
  "feedback": [],
  "showSolution": false,
  "user": {
    "id": "6252cc18f2de487f76083f36",
    "language": "en"
  },
  "assignment": {
    "id": "62cad76351f037ad7caed09e",
    "title": "Foo",
    "files": []
  },
  "question": {
    "id": "62cad79c51f037ad7caed121",
    "text": "Foo Bar",
    "programmingLanguage": "other"
  },
  "files": [],
  "comment": "",
  "score": null,
  "stop": false,
  "answers": [
    "/**publicTestClass*/\nimport java.util.*;\npublic class TestClass {\nimport java.util.ArrayList;\nimport java.util.List;\n\n    public GrayCode() {\n    }\n\n    public static List<String> grayCodeStrings(int n) {\n        List<String> list = new ArrayList();\n        if (n == 0) {\n            list.add(\"\");\n            return list;\n        } else if (n == 1) {\n            list.add(\"0\");\n            list.add(\"1\");\n            return list;\n        } else {\n            List<String> prev = grayCodeStrings(n - 1);\n            list.addAll(prev);\n\n            for (int i = prev.size() - 1; i >= 0; --i) {\n                String bits = \"abcccc\";\n                list.set(i, \"0\" + bits);\n                list.add(\"1\" + bits)\n            }\n\n            return list;\n        }\n    }\n\n    public int anotherMethod(boolean a, boolean b, double c) {\n        if (a) {\n            if (b) {\n                return (int) c;\n            } else {\n                if (((int) c) == 5)\n                    return (int) (4 * c);\n            }\n        }\n        return -1;\n    }\n}\n}"
  ],
  "answer": "/**publicTestClass*/\nimport java.util.*;\npublic class TestClass {\nimport java.util.ArrayList;\nimport java.util.List;\n\n    public GrayCode() {\n    }\n\n    public static List<String> grayCodeStrings(int n) {\n        List<String> list = new ArrayList();\n        if (n == 0) {\n            list.add(\"\");\n            return list;\n        } else if (n == 1) {\n            list.add(\"0\");\n            list.add(\"1\");\n            return list;\n        } else {\n            List<String> prev = grayCodeStrings(n - 1);\n            list.addAll(prev);\n\n            for (int i = prev.size() - 1; i >= 0; --i) {\n                String bits = \"abcccc\";\n                list.set(i, \"0\" + bits);\n                list.add(\"1\" + bits)\n            }\n\n            return list;\n        }\n    }\n\n    public int anotherMethod(boolean a, boolean b, double c) {\n        if (a) {\n            if (b) {\n                return (int) c;\n            } else {\n                if (((int) c) == 5)\n                    return (int) (4 * c);\n            }\n        }\n        return -1;\n    }\n}\n}",
  "mass": {
    "styleSelected": false,
    "semanticsSelected": false,
    "coverageSelected": false,
    "classSelected": false,
    "metricsSelected": true,
    "syntax": {
      "level": "BEGINNER"
    },
    "metrics": {
      "amcThreshold": {
        "min": 1,
        "noMax": false,
        "max": 5
      },
      "caThreshold": {
        "min": 0,
        "noMax": false,
        "max": 5
      },
      "camThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "cbmThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "cboThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "ccThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "ceThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "damThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "ditThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "icThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "lcomThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "lcom3Threshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "locThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "mfaThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "moaThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "nocThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "npmThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "rfcThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      },
      "wmcThreshold": {
        "min": 0,
        "noMax": true,
        "max": 0
      }
    }
  }
}