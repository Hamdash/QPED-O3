package eu.qped.java.checkers.design.ckjm;

import eu.qped.java.checkers.design.Metric;
import gr.spinellis.ckjm.CkjmOutputHandler;
import gr.spinellis.ckjm.ClassMetrics;
import lombok.Data;

import java.util.HashMap;
import java.util.Map;

import static eu.qped.java.checkers.design.Metric.*;

/**
 * Class is used to handle the output generated by the checker.
 * The output is saved in a nested map {@link #outputMetrics}.
 *
 * @author Jannik Seus
 */
@Data
public class SaveMapResults implements CkjmOutputHandler {

    private final Map<String, Map<Metric, Double>> outputMetrics;

    @Override
    public void handleClass(String name, ClassMetrics c) {

        Map<Metric, Double> metricsForClass = new HashMap<>();

        metricsForClass.put(WMC, (double) c.getWmc());
        metricsForClass.put(DIT, (double) c.getDit());
        metricsForClass.put(NOC, (double) c.getNoc());
        metricsForClass.put(CBO, (double) c.getCbo());
        metricsForClass.put(RFC, (double) c.getRfc());
        metricsForClass.put(LCOM, (double) c.getLcom());
        metricsForClass.put(CA, (double) c.getCa());
        metricsForClass.put(CE, (double) c.getCe());
        metricsForClass.put(NPM, (double) c.getNpm());
        metricsForClass.put(LCOM3, c.getLcom3());
        metricsForClass.put(LOC, (double) c.getLoc());
        metricsForClass.put(DAM, c.getDam());
        metricsForClass.put(MOA, (double) c.getMoa());
        metricsForClass.put(MFA, c.getMfa());
        metricsForClass.put(CAM, c.getCam());
        metricsForClass.put(IC, (double) c.getIc());
        metricsForClass.put(CBM, (double) c.getCbm());
        metricsForClass.put(AMC, c.getAmc());

        outputMetrics.put(name, metricsForClass);
    }
}
